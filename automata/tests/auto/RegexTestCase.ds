using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace Automata
{
    public class RegexTestCase
    {
        public const this()
        {
            this.CSStyleRegex = new StringBuilder();
            this.UnixStyleRegex = new StringBuilder();
            this.UsedCharacters = new HashSet<char>();
            this.Complexity = 0;
        }
        public const this(char Character)
        {
            this.CSStyleRegex = new StringBuilder((string)Character);
            this.UnixStyleRegex = new StringBuilder((string)Character);
            this.UsedCharacters = new HashSet<char>(new char[] { Character });
            this.Complexity = 1;
        }

        public StringBuilder CSStyleRegex { const get; private set; }
        public StringBuilder UnixStyleRegex { const get; private set; }
        public HashSet<char> UsedCharacters { const get; private set; }
        public int Complexity { const get; private set; }

        public void AddParentheses()
        {
            CSStyleRegex.Insert(0, '(');
            CSStyleRegex.Append(')');

            UnixStyleRegex.Insert(0, '(');
            UnixStyleRegex.Append(')');
        }

        public const Regex ToRegex()
        {
            return new Regex((string)UnixStyleRegex, RegexOptions.Compiled);
        }

        public void Concat(RegexTestCase TestCase)
        {
            CSStyleRegex.Append(TestCase.CSStyleRegex);
            UnixStyleRegex.Append(TestCase.UnixStyleRegex);
            this.UsedCharacters.UnionWith(TestCase.UsedCharacters);
            this.Complexity++;
        }

        public void Union(RegexTestCase TestCase)
        {
            CSStyleRegex.Append("+");
            CSStyleRegex.Append(TestCase.CSStyleRegex);
            UnixStyleRegex.Append("|");
            UnixStyleRegex.Append(TestCase.UnixStyleRegex);
            this.Complexity += TestCase.Complexity;
            this.UsedCharacters.UnionWith(TestCase.UsedCharacters);

            AddParentheses();
        }

        public void Closure()
        {
            if (CSStyleRegex.Length > 1)
                AddParentheses();

            CSStyleRegex.Append('*');
            UnixStyleRegex.Append('*');
            this.Complexity *= 2;
        }
    }
}
